
html {
  // Always show page scrollbar to prevent side-movement when hovering over
  // items that are extending their height.
  overflow-y: scroll;
}

body,
html {
  background: $white;
  color: $default_text;
  font-family: $font_stack_default;
  font-weight: $font_weight_light;
}

.main-content {
  background-color: $white;
}

/**
 * Fixes the issue with contained floating elements that do not force the container's height.
 */
.clearfix {
  @include clearfix-mixin;
}

/**
 * Set the style for a 2 column CSS Media Object, first column is optional.
 */
.mobject {
  position: relative;
  .group-side {
    display: block;
    float: left;
    margin-right: 0.5em;
  }
  .group-main {
    display: table-cell;
    width: 500em;
  }
}

/**
 * Hide elements from all users.
 *
 * Used for elements which should not be immediately displayed to any user. An
 * example would be a collapsible fieldset that will be expanded with a click
 * from a user. The effect of this class can be toggled with the jQuery show()
 * and hide() functions.
 */
.element-hidden {
  display: none;
}

/**
 * Hide elements visually, but keep them available for screen-readers.
 *
 * Used for information required for screen-reader users to understand and use
 * the site where visual display is undesirable. Information provided in this
 * manner should be kept concise, to avoid unnecessary burden on the user.
 * "!important" is used to prevent unintentional overrides.
 */
.element-invisible {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute !important;
}

/**
 * The .element-focusable class extends the .element-invisible class to allow
 * the element to be focusable when navigated to via the keyboard.
 */
.element-invisible.element-focusable:active,
.element-invisible.element-focusable:focus {
  clip: auto;
  height: auto;
  overflow: visible;
  position: static !important;
}

/**
 * Style the accessibility "Skip to main content" link.
 */
#skip-link {
  $block_width: 20em;

  left: 50%;
  margin-left: -1 * $block_width / 2;
  position: absolute;
  text-align: center;
  width: $block_width;
  z-index: 10;

  a {
    background: $blue_light;
    display: block;
    padding: 1em;
    text-decoration: none;
  }
}
